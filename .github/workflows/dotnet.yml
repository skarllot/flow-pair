# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ linux, osx, win ]
        arch: [ x64, arm64 ]
        include:
          - os: linux
            image: ubuntu-latest
          - os: osx
            image: macos-latest
          - os: win
            image: windows-latest
        exclude:
          - os: win
            arch: arm64
          - os: linux
            arch: arm64
          - os: osx
            arch: x64

    runs-on: ${{ matrix.image }}
    defaults:
      run:
        shell: bash

    steps:
    - name: 🛡️ Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          aka.ms:443
          api.codecov.io:443
          api.nuget.org:443
          auth.docker.io:443
          builds.dotnet.microsoft.com:443
          ci.dot.net:443
          cli.codecov.io:443
          dotnetbuilds.azureedge.net:443
          dotnetcli.azureedge.net:443
          github.com:443
          ingest.codecov.io:443
          keybase.io:443
          objects.githubusercontent.com:443
          storage.googleapis.com:443

    - name: 🛒 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: 🧰 Setup .NET
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        global-json-file: global.json

    - name: 🗃️ Setup NuGet cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: 📥 Restore dependencies
      run: dotnet restore --locked-mode

    - name: 🏗️ Build
      run: dotnet build --no-restore

    - name: ✅ Test
      run: dotnet test --no-build --verbosity normal -p:CollectCoverage=true -p:CoverletOutputFormat=opencover

    - name: ☂️ Upload coverage reports to Codecov
      uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: ✅ Test Publish
      run: |
        dotnet publish --no-restore -r ${{ matrix.os }}-${{ matrix.arch }} -c Debug
        7z a -tzip -mx9 flowpair-${{ matrix.os }}-${{ matrix.arch }}.zip $PWD/publish/*
      if: (matrix.os == 'linux' && matrix.arch == 'x64') || (matrix.os == 'osx' && matrix.arch == 'arm64')
