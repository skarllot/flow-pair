[
    [
        [
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to rate the changes based on SOLID principles if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to improve readability where it can significantly impacts understanding if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to flag any API keys or secrets present in plain text immediately as highest risk if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to make code cleaner where it introduces substantial benefits if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to apply the principles of DRY, KISS, YAGNI and Clean Code if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to ensure new code follow existing patterns and structure if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "\u003Cf5fc95a5\u003E"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to avoid magic strings and numbers if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "2 - Medium priority adjustments\n\nThere are a few instances of magic strings that could be improved:\n\n1. In the \u0060FlowHttpClient\u0060 class, there are several hardcoded string values used for HTTP headers and the base address. These could be extracted into constants or configuration values for better maintainability:\n\n\u0060\u0060\u0060csharp\nprivate const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\nprivate const string FlowAgentHeader = \u0022FlowAgent\u0022;\nprivate const string FlowOperationIdHeader = \u0022FlowOperationId\u0022;\nprivate const string FlowTenantHeader = \u0022FlowTenant\u0022;\nprivate const string AuthorizationHeader = \u0022Authorization\u0022;\n\u0060\u0060\u0060\n\n2. In the \u0060FlowAuthService\u0060 class, there\u0027s a hardcoded URL path for token generation:\n\n\u0060\u0060\u0060csharp\nconst string TokenGenerationPath = \u0022/auth-engine-api/v1/api-key/token\u0022;\n\u0060\u0060\u0060\n\nExtracting these magic strings into constants or configuration values would improve the code\u0027s maintainability and make it easier to update if these values change in the future."
                },
                {
                    "role": "user",
                    "content": "Ensure the feedback contain the file path and the line number.\r\nDo not provide positive reinforcement or comments on good decisions. Focus solely on areas that need improvement.\r\nEnsure the feedback details are brief, concise, and accurate. If there are multiple similar issues, only comment on the most critical."
                },
                {
                    "role": "assistant",
                    "content": "2 - Medium priority adjustments\n\nsrc/FlowReviewer/Flow/FlowHttpClient.cs:10\nReplace the hardcoded base address with a constant or configuration value:\n\u0060\u0060\u0060csharp\nprivate const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u0060\u0060\u0060\n\nsrc/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs:22\nExtract the hardcoded URL path into a constant:\n\u0060\u0060\u0060csharp\nrequestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u0060\u0060\u0060"
                },
                {
                    "role": "user",
                    "content": "Include brief example code snippets in the feedback details for your suggested changes when you\u0027re confident your suggestions are improvements.\r\nUse the same programming language as the file under review. If there are multiple improvements you suggest in the feedback details, use an ordered list to indicate the priority of the changes."
                },
                {
                    "role": "assistant",
                    "content": "2 - Medium priority adjustments\n\n1. src/FlowReviewer/Flow/FlowHttpClient.cs:10\n   Replace the hardcoded base address with a constant:\n   \u0060\u0060\u0060csharp\n   private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n   public FlowHttpClient()\n   {\n       BaseAddress = new Uri(FlowBaseAddress);\n       // ...\n   }\n   \u0060\u0060\u0060\n\n2. src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs:22\n   Extract the hardcoded URL path into a constant:\n   \u0060\u0060\u0060csharp\n   private const string TokenGenerationPath = \u0022/auth-engine-api/v1/api-key/token\u0022;\n   \n   public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n   {\n       // ...\n       using var responseMessage = httpClient.PostAsJson(\n           requestUri: TokenGenerationPath,\n           // ...\n       );\n       // ...\n   }\n   \u0060\u0060\u0060"
                },
                {
                    "role": "user",
                    "content": "Format the feedback in a valid JSON format as a list of feedbacks, or \u0022[]\u0022 for no feedbacks.\r\nThe \u0022feedback\u0022 property can be multiline and include example code snippets.\r\nThe schema of the JSON feedback object must be:\r\n\u0060\u0060\u0060\r\n{\r\n  \u0022$schema\u0022: \u0022http://json-schema.org/draft-07/schema#\u0022,\r\n  \u0022type\u0022: \u0022array\u0022,\r\n  \u0022description\u0022: \u0022An array of code review feedback items\u0022,\r\n  \u0022items\u0022: {\r\n    \u0022type\u0022: \u0022object\u0022,\r\n    \u0022description\u0022: \u0022A code review feedback item\u0022,\r\n    \u0022properties\u0022: {\r\n      \u0022riskScore\u0022: {\r\n        \u0022type\u0022: \u0022integer\u0022,\r\n        \u0022minimum\u0022: 0,\r\n        \u0022maximum\u0022: 3,\r\n        \u0022description\u0022: \u0022The risk level of the feedback based on LOGAF (Likelihood of Occurrence and Gravity of Adverse effects), ranging from 0 (lowest) to 3 (highest)\u0022\r\n      },\r\n      \u0022riskDescription\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022enum\u0022: [\r\n          \u0022Not important\u0022,\r\n          \u0022Low priority adjustments\u0022,\r\n          \u0022Medium priority adjustments\u0022,\r\n          \u0022High priority adjustments\u0022\r\n        ],\r\n        \u0022description\u0022: \u0022A textual description of the risk level\u0022\r\n      },\r\n      \u0022title\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[^\\n\\r]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022A brief title or summary of the feedback\u0022\r\n      },\r\n      \u0022category\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[^\\n\\r]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022The category or type of the feedback\u0022\r\n      },\r\n      \u0022language\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[A-Za-z\u002B#]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022The programming language of the code being reviewed\u0022\r\n      },\r\n      \u0022feedback\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 5,\r\n        \u0022description\u0022: \u0022Detailed feedback or comments about the code. Use Markdown delimiters (\u0060\u0060\u0060 or \u0060) for code snippets.\u0022\r\n      },\r\n      \u0022path\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022pattern\u0022: \u0022^/.*\u0022,\r\n        \u0022description\u0022: \u0022The file path of the code being reviewed, starting with a forward slash\u0022\r\n      },\r\n      \u0022lineRange\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022pattern\u0022: \u0022^\\\\d\u002B(-\\\\d\u002B)?$\u0022,\r\n        \u0022description\u0022: \u0022The range of lines affected. Can be a single line number (e.g., \u002742\u0027) or a range (e.g., \u002742-45\u0027)\u0022\r\n      }\r\n    },\r\n    \u0022required\u0022: [\u0022riskScore\u0022, \u0022riskDescription\u0022, \u0022title\u0022, \u0022category\u0022, \u0022language\u0022, \u0022feedback\u0022, \u0022path\u0022, \u0022lineRange\u0022],\r\n    \u0022additionalProperties\u0022: false\r\n  }\r\n}\r\n\u0060\u0060\u0060"
                },
                {
                    "role": "assistant",
                    "content": "[\n  {\n    \u0022riskScore\u0022: 2,\n    \u0022riskDescription\u0022: \u0022Medium priority adjustments\u0022,\n    \u0022title\u0022: \u0022Replace hardcoded base address with constant\u0022,\n    \u0022category\u0022: \u0022Code Maintainability\u0022,\n    \u0022language\u0022: \u0022C#\u0022,\n    \u0022feedback\u0022: \u0022Replace the hardcoded base address with a constant for improved maintainability:\\n\\n\u0060\u0060\u0060csharp\\nprivate const string FlowBaseAddress = \\\u0022https://flow.ciandt.com/\\\u0022;\\npublic FlowHttpClient()\\n{\\n    BaseAddress = new Uri(FlowBaseAddress);\\n    // ...\\n}\\n\u0060\u0060\u0060\u0022,\n    \u0022path\u0022: \u0022/src/FlowReviewer/Flow/FlowHttpClient.cs\u0022,\n    \u0022lineRange\u0022: \u002210\u0022\n  },\n  {\n    \u0022riskScore\u0022: 2,\n    \u0022riskDescription\u0022: \u0022Medium priority adjustments\u0022,\n    \u0022title\u0022: \u0022Extract hardcoded URL path into constant\u0022,\n    \u0022category\u0022: \u0022Code Maintainability\u0022,\n    \u0022language\u0022: \u0022C#\u0022,\n    \u0022feedback\u0022: \u0022Extract the hardcoded URL path into a constant:\\n\\n\u0060\u0060\u0060csharp\\nprivate const string TokenGenerationPath = \\\u0022/auth-engine-api/v1/api-key/token\\\u0022;\\n\\npublic Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\\n{\\n    // ...\\n    using var responseMessage = httpClient.PostAsJson(\\n        requestUri: TokenGenerationPath,\\n        // ...\\n    );\\n    // ...\\n}\\n\u0060\u0060\u0060\u0022,\n    \u0022path\u0022: \u0022/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\u0022,\n    \u0022lineRange\u0022: \u002222\u0022\n  }\n]"
                }
            ],
            [
                {
                    "role": "system",
                    "content": "You are an expert developer, your task is to review a set of changes on Git commits.\r\nYou are given a set of Git patches, containing the filenames and their partial contents. Note that you might not have the full context of the code.\r\nOnly review lines of code which have been changed (added or removed) in the pull request. Other lines are added to provide context but should be ignored in the review.\r\nBegin your feedback by evaluating the changed code using a risk score similar to a LOGAF score but measured from 0 to 3, where 0 is the lowest risk to the codebase if the code is merged and 3 is the highest risk which would likely break something or be unsafe. Risk score should be described as \u00220 - Not important\u0022, \u00221 - Low priority adjustments\u0022, \u00222 - Medium priority adjustments\u0022 or \u00223 - High priority adjustments\u0022.\r\nOnly provide feedback on critical issues. If the code is already well-written or issues are minor, do not provide any feedback.\r\nAvoid commenting on breaking functions down into smaller, more manageable functions unless it is a significant problem. Be aware that there will be libraries and techniques used which you might not be familiar with, so do not comment on those unless you are confident that there is a problem."
                },
                {
                    "role": "user",
                    "content": "Follow below a set of changes for review:\r\n============\r\ndiff --git a/src/FlowReviewer/Flow/FlowChangesReviewer.cs b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nsimilarity index 96%\nrename from src/FlowReviewer/Flow/FlowChangesReviewer.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\nindex 1274e3d..946b263 100644\n--- a/src/FlowReviewer/Flow/FlowChangesReviewer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/FlowChangesReviewer.cs\n@@ -3,19 \u002B3,21 @@ using System.IO.Abstractions;\n using System.Text;\n using System.Text.Json;\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n using Spectre.Console;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n \n public partial interface IFlowChangesReviewer;\n \n [GenerateAutomaticInterface]\n public sealed class FlowChangesReviewer(\n     IAnsiConsole console,\n-    ILlmClient llmClient,\n\u002B    IProxyClient proxyClient,\n     AppJsonContext jsonContext,\n     IFileSystem fileSystem)\n     : IFlowChangesReviewer\n@@ -48,7 \u002B50,7 @@ public sealed class FlowChangesReviewer(\n \n     private ImmutableList\u003CReviewerFeedbackResponse\u003E GetFeedback(AllowedModel model, string diff)\n     {\n-        var result = llmClient.ChatCompletion(\n\u002B        var result = proxyClient.ChatCompletion(\n             model,\n             [s_systemMessage, new Message(Role.User, diff)]);\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\nrename to src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\nindex 2dc6dd7..3238fb5 100644\n--- a/src/FlowReviewer/Flow/Models/v1/ReviewerFeedbackResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Agent/ReviewChanges/v1/ReviewerFeedbackResponse.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n \n public sealed record ReviewerFeedbackResponse(\n     int RiskScore,\n\r\n\r\ndiff --git a/src/FlowReviewer/Common/AppJsonContext.cs b/src/FlowReviewer/Common/AppJsonContext.cs\nindex be6032f..00f2485 100644\n--- a/src/FlowReviewer/Common/AppJsonContext.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Common/AppJsonContext.cs\n@@ -1,8 \u002B1,9 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n using Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n \n namespace Ciandt.FlowTools.FlowReviewer.Common;\n@@ -17,7 \u002B18,6 @@ namespace Ciandt.FlowTools.FlowReviewer.Common;\n [JsonSerializable(typeof(UserSession))]\n [JsonSerializable(typeof(GenerateTokenRequest))]\n [JsonSerializable(typeof(GenerateTokenResponse))]\n-[JsonSerializable(typeof(ImmutableList\u003CGetAvailableModelsResponse\u003E))]\n [JsonSerializable(typeof(OpenAiChatCompletionRequest))]\n [JsonSerializable(typeof(OpenAiChatCompletionResponse))]\n [JsonSerializable(typeof(BedrockChatCompletionRequest))]\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/AppContainer.cs b/src/FlowReviewer/DependencyInjection/AppContainer.cs\nindex 5b3f0bf..078a30d 100644\n--- a/src/FlowReviewer/DependencyInjection/AppContainer.cs\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/AppContainer.cs\n@@ -1,24 \u002B1,19 @@\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n using Jab;\n \n namespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n [ServiceProvider]\n\u002B[Import(typeof(IFlowModule))]\n\u002B[Import(typeof(IAgentModule))]\n [Import(typeof(IExternalModule))]\n [Singleton(typeof(AppJsonContext), Factory = nameof(AppJsonContextDefaultInstance))]\n [Singleton(typeof(IRunner), typeof(Runner))]\n [Singleton(typeof(IConfigurationService), typeof(ConfigurationService))]\n [Singleton(typeof(IUserSessionService), typeof(UserSessionService))]\n [Singleton(typeof(IGitDiffExtractor), typeof(GitDiffExtractor))]\n-[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n-[Singleton(typeof(ILlmClient), typeof(LlmClient))]\n-[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n-[Singleton(typeof(IBedrockClient), typeof(BedrockClient))]\n public sealed partial class AppContainer\n {\n     private static AppJsonContext AppJsonContextDefaultInstance() =\u003E AppJsonContext.Default;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IAgentModule.cs b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\nnew file mode 100644\nindex 0000000..a33577b\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IAgentModule.cs\n@@ -0,0 \u002B1,8 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(IFlowChangesReviewer), typeof(FlowChangesReviewer))]\n\u002Bpublic interface IAgentModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/DependencyInjection/IFlowModule.cs b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\nnew file mode 100644\nindex 0000000..f3525ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/DependencyInjection/IFlowModule.cs\n@@ -0,0 \u002B1,16 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002Busing Jab;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n\u002B\n\u002B[ServiceProviderModule]\n\u002B[Singleton(typeof(FlowHttpClient))]\n\u002B[Singleton(typeof(IFlowAuthService), typeof(FlowAuthService))]\n\u002B[Singleton(typeof(IProxyClient), typeof(ProxyClient))]\n\u002B[Singleton(typeof(IOpenAiClient), typeof(OpenAiClient))]\n\u002B[Singleton(typeof(IAnthropicClient), typeof(AnthropicClient))]\n\u002Bpublic interface IFlowModule;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\nindex e95beb8..a28325e 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/BedrockClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/AnthropicClient.cs\n@@ -1,20 \u002B1,22 @@\n using System.Collections.Immutable;\n using System.Text;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n \n-public interface IBedrockClient : IModelClient;\n\u002Bpublic partial interface IAnthropicClient;\n \n-public sealed class BedrockClient(\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class AnthropicClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n-    : IBedrockClient\n\u002B    : IAnthropicClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedAnthropicModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         var systemMessage = messages\n@@ -34,7 \u002B36,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Anthropic chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -43,7 \u002B45,7 @@ public sealed class BedrockClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Anthropic chat completion is null or empty\u0022);\n         }\n \n         return response.Content.Select(c =\u003E new Message(response.Role, c.Text)).First();\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\nnew file mode 100644\nindex 0000000..76d6d5e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/AllowedAnthropicModels.cs\n@@ -0,0 \u002B1,14 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedAnthropicModelsJsonConverter : JsonConverter\u003CAllowedAnthropicModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedAnthropicModelsJsonConverter))]\n\u002Bpublic enum AllowedAnthropicModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022anthropic.claude-3-sonnet\u0022)] Claude3Sonnet,\n\u002B    [JsonPropertyName(\u0022anthropic.claude-35-sonnet\u0022)] Claude35Sonnet,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nsimilarity index 84%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\nindex 4768593..ddf9e65 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EThe input messages.\u003C/param\u003E\n@@ -14,7 \u002B14,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n /// \u003Cparam name=\u0022Temperature\u0022\u003EThe amount of randomness injected into the response, between 0 and 1.\u003C/param\u003E\n /// \u003Cparam name=\u0022MaxTokens\u0022\u003EThe maximum number of tokens to generate before stopping.\u003C/param\u003E\n public sealed record BedrockChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedAnthropicModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022system\u0022)] string? System = null,\n     [property: JsonPropertyName(\u0022anthropic_version\u0022)] string AnthropicVersion = \u0022bedrock-2023-05-31\u0022,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nsimilarity index 86%\nrename from src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\nindex 7b6944b..544e24a 100644\n--- a/src/FlowReviewer/Flow/AmazonBedrock/Models/v1/BedrockChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/AnthropicCompleteChat/v1/BedrockChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.AmazonBedrock.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n \n public sealed record BedrockChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/FlowHttpClient.cs b/src/FlowReviewer/Flow/FlowHttpClient.cs\nnew file mode 100644\nindex 0000000..392360e\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/FlowHttpClient.cs\n@@ -0,0 \u002B1,35 @@\n\u002Busing System.Net.Http.Headers;\n\u002Busing System.Net.Mime;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow;\n\u002B\n\u002Bpublic sealed class FlowHttpClient : HttpClient\n\u002B{\n\u002B    private const string FlowBaseAddress = \u0022https://flow.ciandt.com/\u0022;\n\u002B\n\u002B    public FlowHttpClient() : base(new SocketsHttpHandler())\n\u002B    {\n\u002B        BaseAddress = new Uri(FlowBaseAddress);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowAgent\u0022, \u0022local-flow-reviewer\u0022);\n\u002B        DefaultRequestHeaders.Add(\u0022FlowOperationId\u0022, Guid.NewGuid().ToString(\u0022N\u0022));\n\u002B        DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(MediaTypeNames.Application.Json));\n\u002B    }\n\u002B\n\u002B    public string? FlowTenant\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022FlowTenant\u0022, out var values) ? values.FirstOrDefault() : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022FlowTenant\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022FlowTenant\u0022, value);\n\u002B    }\n\u002B\n\u002B    public string? BearerToken\n\u002B    {\n\u002B        get =\u003E DefaultRequestHeaders.TryGetValues(\u0022Authorization\u0022, out var values)\n\u002B            ? values.FirstOrDefault()?.Replace(\u0022Bearer \u0022, \u0022\u0022, StringComparison.OrdinalIgnoreCase)\n\u002B            : null;\n\u002B        set =\u003E _ = value is null\n\u002B            ? DefaultRequestHeaders.Remove(\u0022Authorization\u0022)\n\u002B            : DefaultRequestHeaders.TryAddWithoutValidation(\u0022Authorization\u0022, $\u0022Bearer {value}\u0022);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\nnew file mode 100644\nindex 0000000..5bdaa20\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/FlowAuthService.cs\n@@ -0,0 \u002B1,69 @@\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Common;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence.Models.v1;\n\u002Busing Spectre.Console;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002B\n\u002Bpublic partial interface IFlowAuthService;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class FlowAuthService(\n\u002B    IAnsiConsole console,\n\u002B    FlowHttpClient httpClient,\n\u002B    AppJsonContext jsonContext,\n\u002B    IUserSessionService userSessionService)\n\u002B    : IFlowAuthService\n\u002B{\n\u002B    public Result\u003CUserSession, FlowError\u003E RequestToken(AppConfiguration configuration, UserSession userSession)\n\u002B    {\n\u002B        httpClient.FlowTenant = configuration.Tenant;\n\u002B\n\u002B        var now = DateTimeOffset.UtcNow;\n\u002B        if (userSession.ExpiresAt \u003E now)\n\u002B        {\n\u002B            httpClient.BearerToken = userSession.AccessToken;\n\u002B            return userSession;\n\u002B        }\n\u002B\n\u002B        console.Write(\u0022Generating Flow token...\u0022);\n\u002B        using var responseMessage = httpClient.PostAsJson(\n\u002B            requestUri: \u0022/auth-engine-api/v1/api-key/token\u0022,\n\u002B            value: new GenerateTokenRequest(\n\u002B                configuration.ClientId,\n\u002B                configuration.ClientSecret,\n\u002B                AppConfiguration.LlmAppCode),\n\u002B            jsonTypeInfo: jsonContext.GenerateTokenRequest);\n\u002B\n\u002B        if (!responseMessage.IsSuccessStatusCode)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Failed to get Flow access token\u0022,\n\u002B                responseMessage.Content.ReadAsString());\n\u002B        }\n\u002B\n\u002B        var response = responseMessage.Content.ReadFromJson(jsonContext.GenerateTokenResponse);\n\u002B        if (response is null)\n\u002B        {\n\u002B            console.WriteLine(\u0022 FAIL\u0022);\n\u002B            return new FlowError(\n\u002B                responseMessage.StatusCode,\n\u002B                \u0022Retrieved Flow access token is null\u0022);\n\u002B        }\n\u002B\n\u002B        userSession = userSession with\n\u002B        {\n\u002B            AccessToken = response.AccessToken, ExpiresAt = now \u002B TimeSpan.FromSeconds(response.ExpiresIn)\n\u002B        };\n\u002B\n\u002B        httpClient.BearerToken = userSession.AccessToken;\n\u002B\n\u002B        userSessionService.Save(userSession);\n\u002B        console.WriteLine(\u0022 OK\u0022);\n\u002B        return userSession;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\nindex 76d312e..1cb942c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenRequest.cs\n@@ -1,4 \u002B1,4 @@\n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenRequest(\n     string ClientId,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nsimilarity index 80%\nrename from src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\nrename to src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\nindex 60ac174..6029ba8 100644\n--- a/src/FlowReviewer/Flow/Models/v1/GenerateTokenResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/GenerateToken/v1/GenerateTokenResponse.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken.v1;\n \n public sealed record GenerateTokenResponse(\n     [property: JsonPropertyName(\u0022access_token\u0022)] string AccessToken,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nsimilarity index 76%\nrename from src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\nindex ab29f71..db96cd3 100644\n--- a/src/FlowReviewer/Flow/OpenAi/OpenAiClient.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/OpenAiClient.cs\n@@ -1,19 \u002B1,21 @@\n using System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n using Ciandt.FlowTools.FlowReviewer.Common;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n-using Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n \n-public interface IOpenAiClient : IModelClient;\n\u002Bpublic partial interface IOpenAiClient;\n \n\u002B[GenerateAutomaticInterface]\n public sealed class OpenAiClient(\n\u002B    FlowHttpClient httpClient,\n     AppJsonContext jsonContext)\n     : IOpenAiClient\n {\n     public Result\u003CMessage, FlowError\u003E ChatCompletion(\n-        HttpClient httpClient,\n-        AllowedModel model,\n\u002B        AllowedOpenAiModels model,\n         ImmutableList\u003CMessage\u003E messages)\n     {\n         using var responseMessage = httpClient.PostAsJson(\n@@ -25,7 \u002B27,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Failed to retrieve chat completion\u0022,\n\u002B                \u0022Failed to retrieve Open AI chat completion\u0022,\n                 responseMessage.Content.ReadAsString());\n         }\n \n@@ -34,7 \u002B36,7 @@ public sealed class OpenAiClient(\n         {\n             return new FlowError(\n                 responseMessage.StatusCode,\n-                \u0022Retrieved chat completion is null or empty\u0022);\n\u002B                \u0022Retrieved Open AI chat completion is null or empty\u0022);\n         }\n \n         return response.Choices[0].Message;\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\nnew file mode 100644\nindex 0000000..211510a\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/AllowedOpenAiModels.cs\n@@ -0,0 \u002B1,17 @@\n\u002Busing System.Text.Json.Serialization;\n\u002Busing Raiqub.Generators.EnumUtilities;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002B\n\u002Bpublic partial class AllowedOpenAiModelsJsonConverter : JsonConverter\u003CAllowedOpenAiModels\u003E;\n\u002B\n\u002B[JsonConverterGenerator(AllowIntegerValues = false)]\n\u002B[JsonConverter(typeof(AllowedOpenAiModelsJsonConverter))]\n\u002Bpublic enum AllowedOpenAiModels\n\u002B{\n\u002B    [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\u002B    [JsonPropertyName(\u0022gpt-4o\u0022)] Gpt4o,\n\u002B    [JsonPropertyName(\u0022gpt-4o-mini\u0022)] Gpt4oMini,\n\u002B    [JsonPropertyName(\u0022gpt-35-turbo\u0022)] Gpt35Turbo,\n\u002B    [JsonPropertyName(\u0022text-embedding-ada-002\u0022)] TextEmbeddingAda002,\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\nindex 63f5219..44df7ab 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionRequest.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionRequest.cs\n@@ -1,8 \u002B1,8 @@\n using System.Collections.Immutable;\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n /// \u003Cparam name=\u0022AllowedModels\u0022\u003EThe list of models to use for this request.\u003C/param\u003E\n /// \u003Cparam name=\u0022Messages\u0022\u003EA list of messages comprising the conversation so far.\u003C/param\u003E\n@@ -28,7 \u002B28,7 @@ namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n /// \u003Cpara\u003ENote that you\u0027ll be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.\u003C/para\u003E\n /// \u003C/param\u003E\n public sealed record OpenAiChatCompletionRequest(\n-    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedModel\u003E AllowedModels,\n\u002B    [property: JsonPropertyName(\u0022allowedModels\u0022)] ImmutableList\u003CAllowedOpenAiModels\u003E AllowedModels,\n     [property: JsonPropertyName(\u0022messages\u0022)] ImmutableList\u003CMessage\u003E Messages,\n     [property: JsonPropertyName(\u0022temperature\u0022)] float? Temperature = null,\n     [property: JsonPropertyName(\u0022top_p\u0022)] float? TopP = null,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nsimilarity index 91%\nrename from src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\nrename to src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\nindex 7fdbd8b..c35c188 100644\n--- a/src/FlowReviewer/Flow/OpenAi/Models/v1/OpenAiChatCompletionResponse.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/OpenAiCompleteChat/v1/OpenAiChatCompletionResponse.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n-using Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAi.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n \n public sealed record OpenAiChatCompletionResponse(\n     [property: JsonPropertyName(\u0022id\u0022)] string Id,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\nnew file mode 100644\nindex 0000000..e16bab9\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class AnthropicMapper\n\u002B{\n\u002B    public static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4o: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt4oMini: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gpt35Turbo: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingAda002: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E AllowedAnthropicModels.Claude3Sonnet,\n\u002B            Claude35Sonnet: () =\u003E AllowedAnthropicModels.Claude35Sonnet,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedAnthropicModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\nnew file mode 100644\nindex 0000000..c14f23d\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs\n@@ -0,0 \u002B1,23 @@\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic static class OpenAiMapper\n\u002B{\n\u002B    public static Option\u003CAllowedOpenAiModels\u003E ToOpenAi(this AllowedModel allowedModel)\n\u002B    {\n\u002B        return allowedModel.Match(\n\u002B            Gpt4: () =\u003E AllowedOpenAiModels.Gpt4,\n\u002B            Gpt4o: () =\u003E AllowedOpenAiModels.Gpt4o,\n\u002B            Gpt4oMini: () =\u003E AllowedOpenAiModels.Gpt4oMini,\n\u002B            Gpt35Turbo: () =\u003E AllowedOpenAiModels.Gpt35Turbo,\n\u002B            TextEmbeddingAda002: () =\u003E AllowedOpenAiModels.TextEmbeddingAda002,\n\u002B            TextEmbeddingGecko003: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Flash: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Gemini15Pro: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude3Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Claude35Sonnet: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None,\n\u002B            Llama370b: () =\u003E Option\u003CAllowedOpenAiModels\u003E.None);\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\nnew file mode 100644\nindex 0000000..787b3ea\n--- /dev/null\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\n@@ -0,0 \u002B1,49 @@\n\u002Busing System.Collections.Immutable;\n\u002Busing AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.AnthropicCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.GenerateToken;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.OpenAiCompleteChat;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Persistence;\n\u002B\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat;\n\u002B\n\u002Bpublic partial interface IProxyClient;\n\u002B\n\u002B[GenerateAutomaticInterface]\n\u002Bpublic sealed class ProxyClient(\n\u002B    IConfigurationService configurationService,\n\u002B    IUserSessionService userSessionService,\n\u002B    IFlowAuthService authService,\n\u002B    IOpenAiClient openAiClient,\n\u002B    IAnthropicClient anthropicClient)\n\u002B    : IProxyClient\n\u002B{\n\u002B    public Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from configuration in configurationService.CurrentAppConfiguration\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from session in userSessionService.UserSession\n\u002B                .MapErr(v =\u003E new FlowError(0, v))\n\u002B            from token in authService.RequestToken(configuration, session)\n\u002B            from chat in AnthropicChatCompletion(model, messages)\n\u002B                .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n\u002B            select chat;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E AnthropicChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from anthropic in model.ToAnthropic()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Anthropic.\u0022))\n\u002B            from message in anthropicClient.ChatCompletion(anthropic, messages)\n\u002B            select message;\n\u002B    }\n\u002B\n\u002B    private Result\u003CMessage, FlowError\u003E OpenAiChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n\u002B    {\n\u002B        return from openAiModels in model.ToOpenAi()\n\u002B                .OkOrElse(() =\u003E new FlowError(0, \u0022Model is not an Open AI.\u0022))\n\u002B            from message in openAiClient.ChatCompletion(openAiModels, messages)\n\u002B            select message;\n\u002B    }\n\u002B}\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nsimilarity index 90%\nrename from src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\nindex a12847d..5e40562 100644\n--- a/src/FlowReviewer/Flow/Models/v1/AllowedModel.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/AllowedModel.cs\n@@ -1,12 \u002B1,14 @@\n using System.Text.Json.Serialization;\n\u002Busing FxKit.CompilerServices;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class AllowedModelJsonConverter : JsonConverter\u003CAllowedModel\u003E;\n \n [JsonConverterGenerator(AllowIntegerValues = false)]\n [JsonConverter(typeof(AllowedModelJsonConverter))]\n\u002B[EnumMatch]\n public enum AllowedModel\n {\n     [JsonPropertyName(\u0022gpt-4\u0022)] Gpt4,\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Message.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nsimilarity index 87%\nrename from src/FlowReviewer/Flow/Models/v1/Message.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\nindex 536db33..d1c0862 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Message.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Message.cs\n@@ -1,6 \u002B1,6 @@\n using System.Text.Json.Serialization;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n /// \u003Cparam name=\u0022Role\u0022\u003EThe role of the messages author.\u003C/param\u003E\n /// \u003Cparam name=\u0022Content\u0022\u003EThe contents of the message. content is required for all messages except assistant messages with function calls.\u003C/param\u003E\n\r\n\r\ndiff --git a/src/FlowReviewer/Flow/Models/v1/Role.cs b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nsimilarity index 92%\nrename from src/FlowReviewer/Flow/Models/v1/Role.cs\nrename to src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\nindex f19448e..ab9508c 100644\n--- a/src/FlowReviewer/Flow/Models/v1/Role.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Flow/ProxyCompleteChat/v1/Role.cs\n@@ -1,7 \u002B1,7 @@\n using System.Text.Json.Serialization;\n using Raiqub.Generators.EnumUtilities;\n \n-namespace Ciandt.FlowTools.FlowReviewer.Flow.Models.v1;\n\u002Bnamespace Ciandt.FlowTools.FlowReviewer.Flow.ProxyCompleteChat.v1;\n \n public partial class RoleJsonConverter : JsonConverter\u003CRole\u003E;\n \n\r\n\r\ndiff --git a/src/FlowReviewer/Program.cs b/src/FlowReviewer/Program.cs\nindex afb8454..aa9307d 100644\n--- a/src/FlowReviewer/Program.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Program.cs\n@@ -1,4 \u002B1,5 @@\n \uFEFFusing Ciandt.FlowTools.FlowReviewer;\n using Ciandt.FlowTools.FlowReviewer.DependencyInjection;\n \n-new AppContainer().GetService\u003CIRunner\u003E().Run();\n\u002Busing var container = new AppContainer();\n\u002Bcontainer.GetService\u003CIRunner\u003E().Run();\n\r\n\r\ndiff --git a/src/FlowReviewer/Runner.cs b/src/FlowReviewer/Runner.cs\nindex ab1dd75..752871c 100644\n--- a/src/FlowReviewer/Runner.cs\n\u002B\u002B\u002B b/src/FlowReviewer/Runner.cs\n@@ -1,6 \u002B1,6 @@\n using AutomaticInterface;\n\u002Busing Ciandt.FlowTools.FlowReviewer.Agent.ReviewChanges;\n using Ciandt.FlowTools.FlowReviewer.ChangeTracking;\n-using Ciandt.FlowTools.FlowReviewer.Flow;\n using Ciandt.FlowTools.FlowReviewer.Persistence;\n \n namespace Ciandt.FlowTools.FlowReviewer;\n\r\n============"
                },
                {
                    "role": "user",
                    "content": "Give feedback to maximize the performance of the code where there is a clear, impactful improvement if applicable; otherwise, reply with \u0022\u003Cf5fc95a5\u003E\u0022 when there are no suggestions"
                },
                {
                    "role": "assistant",
                    "content": "2 - Medium priority adjustments\n\nThe main concern in this code is the potential for increased coupling and reduced flexibility due to the changes in dependency injection and client structure. Here are the key points:\n\n1. The \u0060FlowChangesReviewer\u0060 class now depends on \u0060IProxyClient\u0060 instead of \u0060ILlmClient\u0060. This change might make the class less flexible if it needs to work with different types of clients in the future.\n\n2. The new \u0060ProxyClient\u0060 class introduces a layer of indirection that could potentially impact performance. It now has to determine which specific client (OpenAI or Anthropic) to use for each request, which adds some overhead.\n\n3. The \u0060AnthropicMapper\u0060 and \u0060OpenAiMapper\u0060 classes use pattern matching to convert between different model enums. While this approach is clean, it might become challenging to maintain as new models are added, potentially leading to missed cases or errors.\n\nTo address these issues:\n\n1. Consider using a more flexible dependency injection approach, such as injecting a factory or using a strategy pattern, which would allow \u0060FlowChangesReviewer\u0060 to work with different client types more easily.\n\n2. Evaluate if the \u0060ProxyClient\u0060 layer is necessary. If possible, consider injecting the appropriate client directly where needed to reduce the overhead of runtime decision-making.\n\n3. For the mapper classes, consider using a more maintainable approach, such as a dictionary-based mapping or a configuration file, which would be easier to update as new models are added.\n\nThese changes could help improve the flexibility and maintainability of the code while potentially offering some performance benefits."
                },
                {
                    "role": "user",
                    "content": "Ensure the feedback contain the file path and the line number.\r\nDo not provide positive reinforcement or comments on good decisions. Focus solely on areas that need improvement.\r\nEnsure the feedback details are brief, concise, and accurate. If there are multiple similar issues, only comment on the most critical."
                },
                {
                    "role": "assistant",
                    "content": "src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs:23-32\n\nThe ChatCompletion method uses multiple chained operations that could be simplified. Consider refactoring this method to reduce complexity and improve readability. For example, you could combine the configuration and session retrieval steps or extract some of the logic into separate methods.\n\nsrc/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs:8-23\nsrc/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs:8-23\n\nThe ToAnthropic and ToOpenAi methods use extensive pattern matching, which may become difficult to maintain as new models are added. Consider using a more scalable approach, such as a dictionary-based mapping or configuration file."
                },
                {
                    "role": "user",
                    "content": "Include brief example code snippets in the feedback details for your suggested changes when you\u0027re confident your suggestions are improvements.\r\nUse the same programming language as the file under review. If there are multiple improvements you suggest in the feedback details, use an ordered list to indicate the priority of the changes."
                },
                {
                    "role": "assistant",
                    "content": "src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs:23-32\n\nThe ChatCompletion method can be simplified:\n\n1. Combine configuration and session retrieval:\n\u0060\u0060\u0060csharp\nprivate async Task\u003CResult\u003C(AppConfiguration, UserSession), FlowError\u003E\u003E GetConfigAndSession()\n{\n    var configResult = await configurationService.CurrentAppConfiguration;\n    var sessionResult = await userSessionService.UserSession;\n    \n    return from config in configResult\n           from session in sessionResult\n           select (config, session);\n}\n\npublic Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\n{\n    return from configAndSession in GetConfigAndSession()\n           from token in authService.RequestToken(configAndSession.config, configAndSession.session)\n           from chat in AnthropicChatCompletion(model, messages)\n               .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\n           select chat;\n}\n\u0060\u0060\u0060\n\nsrc/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs:8-23\nsrc/FlowReviewer/Flow/ProxyCompleteChat/OpenAiMapper.cs:8-23\n\nReplace pattern matching with a dictionary-based approach:\n\n\u0060\u0060\u0060csharp\nprivate static readonly Dictionary\u003CAllowedModel, Option\u003CAllowedAnthropicModels\u003E\u003E ModelMapping = new()\n{\n    { AllowedModel.Claude3Sonnet, AllowedAnthropicModels.Claude3Sonnet },\n    { AllowedModel.Claude35Sonnet, AllowedAnthropicModels.Claude35Sonnet },\n    // Add other mappings here\n};\n\npublic static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\n{\n    return ModelMapping.TryGetValue(allowedModel, out var anthropicModel) \n        ? anthropicModel \n        : Option\u003CAllowedAnthropicModels\u003E.None;\n}\n\u0060\u0060\u0060\n\nApply a similar approach to the OpenAiMapper."
                },
                {
                    "role": "user",
                    "content": "Format the feedback in a valid JSON format as a list of feedbacks, or \u0022[]\u0022 for no feedbacks.\r\nThe \u0022feedback\u0022 property can be multiline and include example code snippets.\r\nThe schema of the JSON feedback object must be:\r\n\u0060\u0060\u0060\r\n{\r\n  \u0022$schema\u0022: \u0022http://json-schema.org/draft-07/schema#\u0022,\r\n  \u0022type\u0022: \u0022array\u0022,\r\n  \u0022description\u0022: \u0022An array of code review feedback items\u0022,\r\n  \u0022items\u0022: {\r\n    \u0022type\u0022: \u0022object\u0022,\r\n    \u0022description\u0022: \u0022A code review feedback item\u0022,\r\n    \u0022properties\u0022: {\r\n      \u0022riskScore\u0022: {\r\n        \u0022type\u0022: \u0022integer\u0022,\r\n        \u0022minimum\u0022: 0,\r\n        \u0022maximum\u0022: 3,\r\n        \u0022description\u0022: \u0022The risk level of the feedback based on LOGAF (Likelihood of Occurrence and Gravity of Adverse effects), ranging from 0 (lowest) to 3 (highest)\u0022\r\n      },\r\n      \u0022riskDescription\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022enum\u0022: [\r\n          \u0022Not important\u0022,\r\n          \u0022Low priority adjustments\u0022,\r\n          \u0022Medium priority adjustments\u0022,\r\n          \u0022High priority adjustments\u0022\r\n        ],\r\n        \u0022description\u0022: \u0022A textual description of the risk level\u0022\r\n      },\r\n      \u0022title\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[^\\n\\r]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022A brief title or summary of the feedback\u0022\r\n      },\r\n      \u0022category\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[^\\n\\r]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022The category or type of the feedback\u0022\r\n      },\r\n      \u0022language\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 1,\r\n        \u0022pattern\u0022: \u0022^[A-Za-z\u002B#]\u002B$\u0022,\r\n        \u0022description\u0022: \u0022The programming language of the code being reviewed\u0022\r\n      },\r\n      \u0022feedback\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022minLength\u0022: 5,\r\n        \u0022description\u0022: \u0022Detailed feedback or comments about the code. Use Markdown delimiters (\u0060\u0060\u0060 or \u0060) for code snippets.\u0022\r\n      },\r\n      \u0022path\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022pattern\u0022: \u0022^/.*\u0022,\r\n        \u0022description\u0022: \u0022The file path of the code being reviewed, starting with a forward slash\u0022\r\n      },\r\n      \u0022lineRange\u0022: {\r\n        \u0022type\u0022: \u0022string\u0022,\r\n        \u0022pattern\u0022: \u0022^\\\\d\u002B(-\\\\d\u002B)?$\u0022,\r\n        \u0022description\u0022: \u0022The range of lines affected. Can be a single line number (e.g., \u002742\u0027) or a range (e.g., \u002742-45\u0027)\u0022\r\n      }\r\n    },\r\n    \u0022required\u0022: [\u0022riskScore\u0022, \u0022riskDescription\u0022, \u0022title\u0022, \u0022category\u0022, \u0022language\u0022, \u0022feedback\u0022, \u0022path\u0022, \u0022lineRange\u0022],\r\n    \u0022additionalProperties\u0022: false\r\n  }\r\n}\r\n\u0060\u0060\u0060"
                },
                {
                    "role": "assistant",
                    "content": "[\n  {\n    \u0022riskScore\u0022: 2,\n    \u0022riskDescription\u0022: \u0022Medium priority adjustments\u0022,\n    \u0022title\u0022: \u0022Simplify ChatCompletion method\u0022,\n    \u0022category\u0022: \u0022Code Complexity\u0022,\n    \u0022language\u0022: \u0022C#\u0022,\n    \u0022feedback\u0022: \u0022The ChatCompletion method can be simplified to improve readability and maintainability. Consider combining the configuration and session retrieval steps and extracting some logic into separate methods. Here\u0027s an example of how you could refactor this method:\\n\\n\u0060\u0060\u0060csharp\\nprivate async Task\u003CResult\u003C(AppConfiguration, UserSession), FlowError\u003E\u003E GetConfigAndSession()\\n{\\n    var configResult = await configurationService.CurrentAppConfiguration;\\n    var sessionResult = await userSessionService.UserSession;\\n    \\n    return from config in configResult\\n           from session in sessionResult\\n           select (config, session);\\n}\\n\\npublic Result\u003CMessage, FlowError\u003E ChatCompletion(AllowedModel model, ImmutableList\u003CMessage\u003E messages)\\n{\\n    return from configAndSession in GetConfigAndSession()\\n           from token in authService.RequestToken(configAndSession.config, configAndSession.session)\\n           from chat in AnthropicChatCompletion(model, messages)\\n               .Match(m =\u003E m, _ =\u003E OpenAiChatCompletion(model, messages))\\n           select chat;\\n}\\n\u0060\u0060\u0060\\n\\nThis refactoring reduces the complexity of the ChatCompletion method and improves its readability.\u0022,\n    \u0022path\u0022: \u0022/src/FlowReviewer/Flow/ProxyCompleteChat/ProxyClient.cs\u0022,\n    \u0022lineRange\u0022: \u002223-32\u0022\n  },\n  {\n    \u0022riskScore\u0022: 2,\n    \u0022riskDescription\u0022: \u0022Medium priority adjustments\u0022,\n    \u0022title\u0022: \u0022Replace pattern matching with dictionary-based approach\u0022,\n    \u0022category\u0022: \u0022Maintainability\u0022,\n    \u0022language\u0022: \u0022C#\u0022,\n    \u0022feedback\u0022: \u0022The ToAnthropic and ToOpenAi methods use extensive pattern matching, which may become difficult to maintain as new models are added. Consider using a more scalable approach, such as a dictionary-based mapping. Here\u0027s an example for the AnthropicMapper:\\n\\n\u0060\u0060\u0060csharp\\nprivate static readonly Dictionary\u003CAllowedModel, Option\u003CAllowedAnthropicModels\u003E\u003E ModelMapping = new()\\n{\\n    { AllowedModel.Claude3Sonnet, AllowedAnthropicModels.Claude3Sonnet },\\n    { AllowedModel.Claude35Sonnet, AllowedAnthropicModels.Claude35Sonnet },\\n    // Add other mappings here\\n};\\n\\npublic static Option\u003CAllowedAnthropicModels\u003E ToAnthropic(this AllowedModel allowedModel)\\n{\\n    return ModelMapping.TryGetValue(allowedModel, out var anthropicModel) \\n        ? anthropicModel \\n        : Option\u003CAllowedAnthropicModels\u003E.None;\\n}\\n\u0060\u0060\u0060\\n\\nApply a similar approach to the OpenAiMapper. This change will make it easier to add new model mappings in the future without modifying the method body.\u0022,\n    \u0022path\u0022: \u0022/src/FlowReviewer/Flow/ProxyCompleteChat/AnthropicMapper.cs\u0022,\n    \u0022lineRange\u0022: \u00228-23\u0022\n  }\n]"
                }
            ]
        ]
    ]
]
